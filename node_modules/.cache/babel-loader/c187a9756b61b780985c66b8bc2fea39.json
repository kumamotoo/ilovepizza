{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst _get = (obj, path) => {\n  const [firstKey, ...keys] = path.split('.');\n  return keys.reduce((val, key) => {\n    return val[key];\n  }, obj[firstKey]);\n};\n\nconst getTotalSum = (obj, path) => {\n  return Object.values(obj).reduce((sum, obj) => {\n    const value = _get(obj, path);\n\n    return sum + value;\n  }, 0);\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART':\n      {\n        const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n        const newItems = { ...state.items,\n          [action.payload.id]: {\n            items: currentPizzaItems,\n            totalPrice: getTotalPrice(currentPizzaItems)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'REMOVE_CART_ITEM':\n      {\n        const newItems = { ...state.items\n        };\n        const currentTotalPrice = newItems[action.payload].totalPrice;\n        const currentTotalCount = newItems[action.payload].items.length;\n        delete newItems[action.payload];\n        return { ...state,\n          items: newItems,\n          totalPrice: state.totalPrice - currentTotalPrice,\n          totalCount: state.totalCount - currentTotalCount\n        };\n      }\n\n    case 'PLUS_CART_ITEM':\n      {\n        const newObjItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n        const newItems = { ...state.items,\n          [action.payload]: {\n            items: newObjItems,\n            totalPrice: getTotalPrice(newObjItems)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'MINUS_CART_ITEM':\n      {\n        const oldItems = state.items[action.payload].items;\n        const newObjItems = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n        const newItems = { ...state.items,\n          [action.payload]: {\n            items: newObjItems,\n            totalPrice: getTotalPrice(newObjItems)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'CLEAR_CART':\n      return {\n        totalPrice: 0,\n        totalCount: 0,\n        items: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/home/sofia/pet-projects/react-pizza/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","getTotalPrice","arr","reduce","sum","obj","price","_get","path","firstKey","keys","split","val","key","getTotalSum","Object","values","value","cart","state","action","type","currentPizzaItems","payload","id","newItems","currentTotalPrice","currentTotalCount","length","newObjItems","oldItems","slice"],"mappings":"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","sourcesContent":["const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0,\n};\n\nconst getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst _get = (obj, path) => {\n  const [firstKey, ...keys] = path.split('.');\n  return keys.reduce((val, key) => {\n    return val[key];\n  }, obj[firstKey]);\n};\n\nconst getTotalSum = (obj, path) => {\n  return Object.values(obj).reduce((sum, obj) => {\n    const value = _get(obj, path);\n    return sum + value;\n  }, 0);\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART': {\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: getTotalPrice(currentPizzaItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case 'REMOVE_CART_ITEM': {\n      const newItems = {\n        ...state.items,\n      };\n      const currentTotalPrice = newItems[action.payload].totalPrice;\n      const currentTotalCount = newItems[action.payload].items.length;\n      delete newItems[action.payload];\n      return {\n        ...state,\n        items: newItems,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        totalCount: state.totalCount - currentTotalCount,\n      };\n    }\n\n    case 'PLUS_CART_ITEM': {\n      const newObjItems = [\n        ...state.items[action.payload].items,\n        state.items[action.payload].items[0],\n      ];\n      const newItems = {\n        ...state.items,\n        [action.payload]: {\n          items: newObjItems,\n          totalPrice: getTotalPrice(newObjItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case 'MINUS_CART_ITEM': {\n      const oldItems = state.items[action.payload].items;\n      const newObjItems =\n        oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n      const newItems = {\n        ...state.items,\n        [action.payload]: {\n          items: newObjItems,\n          totalPrice: getTotalPrice(newObjItems),\n        },\n      };\n\n      const totalCount = getTotalSum(newItems, 'items.length');\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case 'CLEAR_CART':\n      return { totalPrice: 0, totalCount: 0, items: {} };\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}